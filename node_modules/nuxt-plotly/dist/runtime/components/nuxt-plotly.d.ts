import { PropType } from "vue";
import Plotly from "plotly.js-dist-min";
export type NuxtPlotlyData = Array<Plotly.Data>;
export type NuxtPlotlyConfig = Partial<Plotly.Config>;
export type NuxtPlotlyLayout = Partial<Plotly.Layout>;
export type NuxtPlotlyHTMLElement = Partial<Plotly.PlotlyHTMLElement>;
declare const _default: import("vue").DefineComponent<{
    data: {
        type: PropType<NuxtPlotlyData>;
        required: true;
    };
    config: {
        type: PropType<Plotly.Config>;
        required: false;
        default: undefined;
    };
    layout: {
        type: PropType<Plotly.Layout>;
        required: false;
        default: undefined;
    };
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "on-ready"[], "on-ready", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    data: {
        type: PropType<NuxtPlotlyData>;
        required: true;
    };
    config: {
        type: PropType<Plotly.Config>;
        required: false;
        default: undefined;
    };
    layout: {
        type: PropType<Plotly.Layout>;
        required: false;
        default: undefined;
    };
}>> & {
    "onOn-ready"?: ((...args: any[]) => any) | undefined;
}, {
    config: Plotly.Config;
    layout: Plotly.Layout;
}, {}>;
export default _default;
